<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kumoh.cosmoa.mapper.CourseMapper">
    <resultMap type="com.kumoh.cosmoa.dto.CourseDTO" id="CourseDTO">
        <result property="id" column="ID" />
        <result property="name" column="NAME" />
        <result property="description" column="DESCRIPTION" />
        <result property="createdDate" column="CREATED_DATE" />
        <result property="modifiedDate" column="MODIFIED_DATE" />
        <result property="userId" column="USER_ID" />
    </resultMap>

    <resultMap type="com.kumoh.cosmoa.dto.response.CourseDetailResponseDTO" id="CourseDetailResponseDTO">
        <result property="nickname" column="NICKNAME" />
        <result property="like" column="LIKE" />
        <result property="isLike" column="IS_LIKE" />
        <collection property="course" resultMap="CourseDTO" />
    </resultMap>

    <select id="getCourseList" resultType="com.kumoh.cosmoa.dto.CourseDTO">
        SELECT  ID,
                NAME,
                DESCRIPTION,
                CREATED_DATE,
                MODIFIED_DATE,
                USER_ID
        FROM COURSE
    </select>    

    <!-- 여행 코스 목록 조회 (번호, 제목, 좋아요수, 작성자 닉네임, 댓글 수)-->
    <select id="getCourseResponseList" resultType="com.kumoh.cosmoa.dto.response.CourseResponseDTO">
        SELECT
                c.ID,
                c.NAME,
                u.NICKNAME,
                (select count(*) from COURSE_LIKE cl  WHERE cl.COURSE_ID = c.ID) AS `LIKE`,
                (select count(*) from COURSE_REPLY cr WHERE cr.COURSE_ID = c.ID) AS `REPLY_COUNT`
        FROM COURSE c, USER u
        WHERE c.USER_ID = u.ID
    </select>
    
    <!-- 여행 코스 목록 조회 Hot (번호, 제목, 좋아요수, 작성자 닉네임, 댓글 수)-->
    <select id="getHotCourseResponseList" resultType="com.kumoh.cosmoa.dto.response.CourseResponseDTO">
        SELECT
                c.ID,
                c.NAME,
                u.NICKNAME,
                (select count(*) from COURSE_LIKE cl  WHERE cl.COURSE_ID = c.ID) AS `LIKE`,
                (select count(*) from COURSE_REPLY cr WHERE cr.COURSE_ID = c.ID) AS `REPLY_COUNT`
        FROM COURSE c, USER u
        WHERE c.USER_ID = u.ID
        ORDER BY `LIKE` DESC
        LIMIT 5
    </select>
    
    <!-- 여행 코스 목록 조회 내가 좋아요 한거 (번호, 제목, 좋아요수, 작성자 닉네임, 댓글 수)-->
    <select id="getScrapedCourseResponseList" resultType="com.kumoh.cosmoa.dto.response.CourseResponseDTO">
    	SELECT
                c.ID,
                c.NAME,
                u.NICKNAME,
                (select count(*) from COURSE_LIKE cl  WHERE cl.COURSE_ID = c.ID) AS `LIKE`,
                (select count(*) from COURSE_REPLY cr WHERE cr.COURSE_ID = c.ID) AS `REPLY_COUNT`
        FROM COURSE c, USER u, COURSE_LIKE cl
        WHERE c.USER_ID = u.ID AND cl.course_id = c.id AND cl.user_id = #{userId}
    </select>
    
    <!-- 여행 코스 목록 조회 내가 쓴거 (번호, 제목, 좋아요수, 작성자 닉네임, 댓글 수)-->
    <select id="getPostedCourseResponseList" resultType="com.kumoh.cosmoa.dto.response.CourseResponseDTO">
        SELECT
                c.ID,
                c.NAME,
                u.NICKNAME,
                (select count(*) from COURSE_LIKE cl  WHERE cl.COURSE_ID = c.ID) AS `LIKE`,
                (select count(*) from COURSE_REPLY cr WHERE cr.COURSE_ID = c.ID) AS `REPLY_COUNT`
        FROM COURSE c, USER u
        WHERE c.USER_ID = u.ID AND u.ID = #{userId}
    </select>


<!--     여행 코스 목록 검색 (위도, 경도 기반)-->
    <select id="searchByLatLng" resultType="com.kumoh.cosmoa.dto.response.CourseResponseDTO">
        SELECT
            c.ID,
            c.NAME,
            u.NICKNAME,
            (6371*acos(cos(radians(#{lat}))*cos(radians(p.LAT))*cos(radians(p.LNG)-radians(#{lng}))+sin(radians(#{lat}))*sin(radians(p.LAT)))) AS `DIST`,
            (select count(*) from COURSE_LIKE cl  WHERE cl.COURSE_ID = c.ID) AS `LIKE`,
            (select count(*) from COURSE_REPLY cr WHERE cr.COURSE_ID = c.ID) AS `REPLY_COUNT`
        FROM COURSE c, COMPOSE cp, PLACE p, USER u
        WHERE   cp.COURSE_ID = c.ID
        AND     cp.PLACE_ID = p.ID
        AND     cp.SEQUENCE = 1
        AND     c.USER_ID = u.ID
        HAVING  DIST &lt; 5
        ORDER BY `ID` DESC
    </select>

    <select id="getCourseDetail" resultMap="CourseDetailResponseDTO">
        SELECT
        c.ID,
        c.USER_ID,
        c.NAME,
        c.DESCRIPTION,
        c.CREATED_DATE,
        c.MODIFIED_DATE,
        (SELECT nickname FROM USER u WHERE c.USER_ID = u.ID) AS NICKNAME,
        (SELECT count(*) FROM COURSE_LIKE cl WHERE cl.COURSE_ID = c.ID) AS `LIKE`,
        (SELECT count(*) FROM COURSE_LIKE cl WHERE cl.COURSE_ID = #{courseId} and cl.USER_ID = #{userId}) as `IS_LIKE`
        FROM COURSE c
        WHERE c.ID = #{courseId}
    </select>

    <select id="getCourse" resultType="com.kumoh.cosmoa.dto.CourseDTO">
        SELECT  ID,
        NAME,
        DESCRIPTION,
        CREATED_DATE,
        MODIFIED_DATE,
        USER_ID
        FROM COURSE
    </select>

    <!-- 코스생성 -->
    <insert id="createCourse" parameterType="com.kumoh.cosmoa.dto.CourseDTO" useGeneratedKeys="true"
    keyProperty="id">
    	INSERT INTO COURSE(
     					ID,
               			NAME,
                		DESCRIPTION,
                		CREATED_DATE,
                		MODIFIED_DATE,
                		USER_ID)
     	VALUES(#{id}, #{name}, #{description}, NOW(), NOW(), #{userId})
    </insert>
    
    <!-- 코스삭제 -->
    <delete id="deleteCourse" parameterType="int">
    	DELETE FROM COURSE WHERE ID = #{id}
    </delete>
    
    <!-- 코스수정 -->
    <update id="updateCourse" parameterType="com.kumoh.cosmoa.dto.CourseDTO">
    	UPDATE COURSE SET ID = #{id},
    					NAME = #{name},
    					DESCRIPTION = #{description},
    					MODIFIED_DATE = NOW()
    				WHERE ID = #{id}
    </update>
    
</mapper>